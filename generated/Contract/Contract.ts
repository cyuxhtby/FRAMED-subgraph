// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class InitGame extends ethereum.Event {
  get params(): InitGame__Params {
    return new InitGame__Params(this);
  }
}

export class InitGame__Params {
  _event: InitGame;

  constructor(event: InitGame) {
    this._event = event;
  }

  get room(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get roomId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class Contract extends ethereum.SmartContract {
  static bind(address: Address): Contract {
    return new Contract("Contract", address);
  }

  createGame(): Address {
    let result = super.call("createGame", "createGame():(address)", []);

    return result[0].toAddress();
  }

  try_createGame(): ethereum.CallResult<Address> {
    let result = super.tryCall("createGame", "createGame():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoomAddress(r: BigInt): Address {
    let result = super.call(
      "getRoomAddress",
      "getRoomAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(r)]
    );

    return result[0].toAddress();
  }

  try_getRoomAddress(r: BigInt): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getRoomAddress",
      "getRoomAddress(uint256):(address)",
      [ethereum.Value.fromUnsignedBigInt(r)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  roomId(): BigInt {
    let result = super.call("roomId", "roomId():(uint256)", []);

    return result[0].toBigInt();
  }

  try_roomId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("roomId", "roomId():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class CreateGameCall extends ethereum.Call {
  get inputs(): CreateGameCall__Inputs {
    return new CreateGameCall__Inputs(this);
  }

  get outputs(): CreateGameCall__Outputs {
    return new CreateGameCall__Outputs(this);
  }
}

export class CreateGameCall__Inputs {
  _call: CreateGameCall;

  constructor(call: CreateGameCall) {
    this._call = call;
  }
}

export class CreateGameCall__Outputs {
  _call: CreateGameCall;

  constructor(call: CreateGameCall) {
    this._call = call;
  }

  get value0(): Address {
    return this._call.outputValues[0].value.toAddress();
  }
}
